{{#> layouts/base title="Делаем свой веб-сайт прогрессивным | Павел Родионов, разработчик интерфейсов"}}
  {{#*inline "head-block" }}
    <link rel="preload" as="image" href="media/images/frontend/vs_sw_screenshotII.png">
  {{/inline}}
  {{#*inline "content"}}
    <div data-barba="container" class="content">
      <main class="main">
        <header class="header">
        </header>
        <section class="post postDetail">
          <div class="post-header">
            <figure class="post-image">
              <img width="300"
                   height="200"
                   src="media/images/frontend/vs_sw_screenshotII.png"
                   alt="vscode serviceWorker screenshot">
            </figure>
            <div class="info-card info-card-blue">
              <h1>Сервис воркер: часть вторая</h1>
            </div>
          </div>
          <p class="postDetail-text accent">
            <strong>UPD.</strong> Такой метод решения проблемы не рекомендуется.
            Лучше использовать библиотеку <a href="https://developers.google.com/web/tools/workbox/">workbox</a>.
          </p>
          <p class="postDetail-text">
            <br>
            <br>
            Пришло время кастомизировать скрипт сервис воркера.
            <br>
            <br>
            Вообще, я узнал, что оказывается,
            кэшем можно управлять не только из сервис воркера.
            Оказывается, кэш доступен и из объекта window, то есть из обычного скрипта
            можно добраться до кэша. А сервис воркер это оказывается воркер, то есть
            джаваскрипт, который работает в дополнительном потоке.
            <br>
            <br>
          </p>
          <h3 class='postDetail-small-header'>
            Часть 1: Причина
          </h3>
          <p class="postDetail-text">
            Итак, причиной изменить код сервис воркера, стало то, что при обновлении
            кода сайта, у некоторых пользователей осталась предыдущая закешированая
            версия этих скриптов. Поэтому, чтобы у пользователей была самая
            свежая версия скриптов и чтобы не менять версию сервис воркера
            вручную при каждом малейшем изменении было решено сделать несколько
            иной механизм обновлений. Например, через текущую
            версию в package.json проекта.
            <br>
            <br>
          </p>

          <h3 class='postDetail-small-header'>
            Часть 2: Решение
          </h3>
          <p class="postDetail-text">
            Теперь, стало ясно, что можно иметь несколько версий кэша. Одну версию
            с файлами которые не будут меняться ( несколько изображений ),
            и версию со скриптами, стилями и версткой ( эта именно та версия, которая
            будет меняться).
            <br>
            <br>
            Итак, появился еще 1 кэш, с номером текущей версии проекта ( 1.0.1, 2.4.8, 15.16 ).
            Появился механизм, который содержит вайт-лист кэшей ( тех кэшей, которые
            сейчас актуальны и которые не надо удалять ). Так вот, если существует
            кэш которого нету в этом вайт листе, то мы этот кэш удаляем.
            <br>
            <br>
            В вайт-листе всегда кэш с изображениями ( у него всегда одно и то же название ), и
            кэш со скриптами и стилями ( его название меняется каждый раз когда
            меняется версия проекта. Таким образом, получается что при каждом обновлении
            предыдущая закешированная версия скриптов удаляется, а вместе нее кэшируется
            свежая)
            <br>
            <br>
            Код, того что получилось вот здесь:
          </p>
          <pre class='postDetail-code'>
        <code class='javascript'>
import {version} from './package.json';
const currentCaches = ['assets', `static-${version}`];

currentCaches.forEach(cache_name => {
  if (cache_name === 'assets') {
    self.addEventListener('install', e => {
      e.waitUntil(
        caches.open(cache_name)
          .then(cache => cache.addAll([
            './assets/icons/favicon.png',
            './assets/img/frontend/vs_sw_screenshot.png',
            './assets/icons/soyuz_apollo192.png',
            './assets/icons/soyuz_apollo_apple_icon.png'
          ]))

        //  use catch for debug only
        //  for it not to return rejected promise in offline mode

        // .catch(err => console.log(cache_name + ' ' + 'rejected:\n', err))
      )
    })
  }

  if (cache_name.startsWith('static')) {
    self.addEventListener('install', e => {

      e.waitUntil(
        caches.open(cache_name)
          .then(cache => cache.addAll([
            './articles/pwa-basics/index.html',
            './bundle.js',
            './index.html',
            './manifest.json', // buggy ( better comment it while debugging )
            './style.css'
          ]))

        //  use cache for debug only
        //  for it not to return rejected promise in offline mode

        // .catch(err => console.log(cache_name + ' ' + 'rejected:\n', err))
      )
    })
  }
});


self.addEventListener('activate', function (event) {
  // https://developer.mozilla.org/en-US/docs/Web/API/Cache

  // Active worker won't be treated as activated until promise
  // resolves successfully.

  event.waitUntil(
    caches.keys().then(cacheNames => {
      return Promise.all(
        cacheNames.map(cacheName => {
          if (currentCaches.includes(cacheName) === false) {
            console.log('Deleting out of date cache:', cacheName);

            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});

self.addEventListener('fetch', function (event) {
  event.respondWith(
    caches.match(event.request)
      .then(matching => {
        return matching || fetch(event.request)
          .catch(err => `${err} нет сети`)
      })
  )
});
      </code>
      </pre>
          <p class="postDetail-text">
            На 11 апреля 2020 на этом сайте 2 кэша<br>

            <br>

            Спасибо за прочтение, надеюсь эта заметка получилась хотя бы мало мальски полезной

            <img src="media/images/frontend/finn_and_jacke_from_google.png" alt="finn and jacke">
          </p>

          <p class="post-date">
            11 April 2020
          </p>

        </section>
      </main>
      {{> includes/footer }}
    </div>
  {{/inline}}
{{/layouts/base}}